name: 'Run tests'
description: 'Run CI tests'
inputs:
  ssh-private-key:
    description: 'SSH private key used to fetch private deps'
    required: true

runs:
  using: "composite"
  steps:
    - run: echo "SSH_AUTH_SOCK=/tmp/ssh_agent.sock" >> $GITHUB_ENV
      shell: bash

    - name: Setup SSH Keys and known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ inputs.ssh-private-key }}"
      shell: bash

    - name: Fetch deps
      run: mix deps.get
      shell: bash

    - name: Compile project
      run: |
        MIX_ENV=test mix compile
        MIX_ENV=dev mix compile
        MIX_ENV=prod mix compile
      shell: bash

    - name: Run linter checks
      run: mix credo list
      shell: bash

    - name: Check code format
      run: mix format --check-formatted
      shell: bash

    - name: Run dialyzer
      run: mix dialyzer
      shell: bash

    - name: "Reset database"
      run: MIX_ENV=test mix ecto.reset
      shell: bash

    - name: Run tests
      run: make test
      shell: bash

    - name: Check migrations reversibility
      run: MIX_ENV=test mix ecto.rollback --all
      shell: bash

    - name: Check OTP release
      run: |
        mix release --overwrite

        # generate config and load to env vars, so release can use the correct database
        set -a && source <(MIX_ENV=test mix run -e "IO.puts(LaunchConfig.template())" | egrep "#.*=" | sed "s/# //")

        _build/prod/rel/launch/bin/migrate.sh
        _build/prod/rel/launch/bin/seed.sh
        _build/prod/rel/launch/bin/launch eval "{:ok, _} = Application.ensure_all_started(:launch)"
        _build/prod/rel/launch/bin/rollback.sh --all
      shell: bash
